// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msginfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msginfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace msginfo {
class CMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsg> {
} _CMsg_default_instance_;
class CMsgHeadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgHead> {
} _CMsgHead_default_instance_;
class CMsgRegDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgReg> {
} _CMsgReg_default_instance_;
class CMsgLoginDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgLogin> {
} _CMsgLogin_default_instance_;
class CMsgLogoutDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgLogout> {
} _CMsgLogout_default_instance_;

namespace protobuf_msginfo_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg, msghead_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsg, msgbody_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHead, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHead, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHead, msglen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHead, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHead, msgseq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHead, termversion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHead, msgres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgHead, termid_),
  1,
  2,
  3,
  4,
  5,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReg, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReg, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReg, shop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReg, ret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgReg, termid_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLogin, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLogin, ret_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLogout, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLogout, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLogout, ret_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(CMsg)},
  { 8, 18, sizeof(CMsgHead)},
  { 24, 33, sizeof(CMsgReg)},
  { 38, 43, sizeof(CMsgLogin)},
  { 44, 49, sizeof(CMsgLogout)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgHead_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgReg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgLogout_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "msginfo.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _CMsg_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CMsgHead_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CMsgReg_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  CMsgReg::_default_termid_.Shutdown();
  _CMsgLogin_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CMsgLogout_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CMsg_default_instance_.DefaultConstruct();
  _CMsgHead_default_instance_.DefaultConstruct();
  CMsgReg::_default_termid_.DefaultConstruct();
  *CMsgReg::_default_termid_.get_mutable() = ::std::string("12345", 5);
  _CMsgReg_default_instance_.DefaultConstruct();
  _CMsgLogin_default_instance_.DefaultConstruct();
  _CMsgLogout_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rmsginfo.proto\022\007msginfo\"(\n\004CMsg\022\017\n\007msgh"
      "ead\030\001 \002(\t\022\017\n\007msgbody\030\002 \002(\t\"p\n\010CMsgHead\022\016"
      "\n\006msglen\030\001 \002(\005\022\017\n\007msgtype\030\002 \002(\005\022\016\n\006msgse"
      "q\030\003 \002(\005\022\023\n\013termversion\030\004 \002(\005\022\016\n\006msgres\030\005"
      " \002(\005\022\016\n\006termid\030\006 \002(\t\"Y\n\007CMsgReg\022\014\n\004area\030"
      "\001 \001(\005\022\016\n\006region\030\002 \001(\005\022\014\n\004shop\030\003 \001(\005\022\013\n\003r"
      "et\030\004 \001(\005\022\025\n\006termid\030\005 \001(\t:\00512345\"\030\n\tCMsgL"
      "ogin\022\013\n\003ret\030\001 \001(\005\"\031\n\nCMsgLogout\022\013\n\003ret\030\001"
      " \001(\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 324);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msginfo.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_msginfo_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsg::kMsgheadFieldNumber;
const int CMsg::kMsgbodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsg::CMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_msginfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msginfo.CMsg)
}
CMsg::CMsg(const CMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msghead_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msghead()) {
    msghead_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msghead_);
  }
  msgbody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msgbody()) {
    msgbody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgbody_);
  }
  // @@protoc_insertion_point(copy_constructor:msginfo.CMsg)
}

void CMsg::SharedCtor() {
  _cached_size_ = 0;
  msghead_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgbody_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsg::~CMsg() {
  // @@protoc_insertion_point(destructor:msginfo.CMsg)
  SharedDtor();
}

void CMsg::SharedDtor() {
  msghead_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgbody_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsg::descriptor() {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[0].descriptor;
}

const CMsg& CMsg::default_instance() {
  protobuf_msginfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsg* CMsg::New(::google::protobuf::Arena* arena) const {
  CMsg* n = new CMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:msginfo.CMsg)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_msghead()) {
      GOOGLE_DCHECK(!msghead_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*msghead_.UnsafeRawStringPointer())->clear();
    }
    if (has_msgbody()) {
      GOOGLE_DCHECK(!msgbody_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*msgbody_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msginfo.CMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string msghead = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msghead()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msghead().data(), this->msghead().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msginfo.CMsg.msghead");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string msgbody = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msgbody()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msgbody().data(), this->msgbody().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msginfo.CMsg.msgbody");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msginfo.CMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msginfo.CMsg)
  return false;
#undef DO_
}

void CMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msginfo.CMsg)
  // required string msghead = 1;
  if (has_msghead()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msghead().data(), this->msghead().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msginfo.CMsg.msghead");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msghead(), output);
  }

  // required string msgbody = 2;
  if (has_msgbody()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgbody().data(), this->msgbody().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msginfo.CMsg.msgbody");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msgbody(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msginfo.CMsg)
}

::google::protobuf::uint8* CMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msginfo.CMsg)
  // required string msghead = 1;
  if (has_msghead()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msghead().data(), this->msghead().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msginfo.CMsg.msghead");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msghead(), target);
  }

  // required string msgbody = 2;
  if (has_msgbody()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msgbody().data(), this->msgbody().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msginfo.CMsg.msgbody");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msgbody(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msginfo.CMsg)
  return target;
}

size_t CMsg::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msginfo.CMsg)
  size_t total_size = 0;

  if (has_msghead()) {
    // required string msghead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msghead());
  }

  if (has_msgbody()) {
    // required string msgbody = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgbody());
  }

  return total_size;
}
size_t CMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msginfo.CMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string msghead = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msghead());

    // required string msgbody = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msgbody());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msginfo.CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msginfo.CMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msginfo.CMsg)
    MergeFrom(*source);
  }
}

void CMsg::MergeFrom(const CMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msginfo.CMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_msghead()) {
      set_has_msghead();
      msghead_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msghead_);
    }
    if (from.has_msgbody()) {
      set_has_msgbody();
      msgbody_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgbody_);
    }
  }
}

void CMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msginfo.CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsg::CopyFrom(const CMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msginfo.CMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CMsg::Swap(CMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsg::InternalSwap(CMsg* other) {
  msghead_.Swap(&other->msghead_);
  msgbody_.Swap(&other->msgbody_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsg::GetMetadata() const {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsg

// required string msghead = 1;
bool CMsg::has_msghead() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsg::set_has_msghead() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsg::clear_has_msghead() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsg::clear_msghead() {
  msghead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msghead();
}
const ::std::string& CMsg::msghead() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsg.msghead)
  return msghead_.GetNoArena();
}
void CMsg::set_msghead(const ::std::string& value) {
  set_has_msghead();
  msghead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msginfo.CMsg.msghead)
}
#if LANG_CXX11
void CMsg::set_msghead(::std::string&& value) {
  set_has_msghead();
  msghead_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msginfo.CMsg.msghead)
}
#endif
void CMsg::set_msghead(const char* value) {
  set_has_msghead();
  msghead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msginfo.CMsg.msghead)
}
void CMsg::set_msghead(const char* value, size_t size) {
  set_has_msghead();
  msghead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msginfo.CMsg.msghead)
}
::std::string* CMsg::mutable_msghead() {
  set_has_msghead();
  // @@protoc_insertion_point(field_mutable:msginfo.CMsg.msghead)
  return msghead_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsg::release_msghead() {
  // @@protoc_insertion_point(field_release:msginfo.CMsg.msghead)
  clear_has_msghead();
  return msghead_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsg::set_allocated_msghead(::std::string* msghead) {
  if (msghead != NULL) {
    set_has_msghead();
  } else {
    clear_has_msghead();
  }
  msghead_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msghead);
  // @@protoc_insertion_point(field_set_allocated:msginfo.CMsg.msghead)
}

// required string msgbody = 2;
bool CMsg::has_msgbody() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsg::set_has_msgbody() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsg::clear_has_msgbody() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsg::clear_msgbody() {
  msgbody_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msgbody();
}
const ::std::string& CMsg::msgbody() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsg.msgbody)
  return msgbody_.GetNoArena();
}
void CMsg::set_msgbody(const ::std::string& value) {
  set_has_msgbody();
  msgbody_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msginfo.CMsg.msgbody)
}
#if LANG_CXX11
void CMsg::set_msgbody(::std::string&& value) {
  set_has_msgbody();
  msgbody_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msginfo.CMsg.msgbody)
}
#endif
void CMsg::set_msgbody(const char* value) {
  set_has_msgbody();
  msgbody_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msginfo.CMsg.msgbody)
}
void CMsg::set_msgbody(const char* value, size_t size) {
  set_has_msgbody();
  msgbody_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msginfo.CMsg.msgbody)
}
::std::string* CMsg::mutable_msgbody() {
  set_has_msgbody();
  // @@protoc_insertion_point(field_mutable:msginfo.CMsg.msgbody)
  return msgbody_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsg::release_msgbody() {
  // @@protoc_insertion_point(field_release:msginfo.CMsg.msgbody)
  clear_has_msgbody();
  return msgbody_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsg::set_allocated_msgbody(::std::string* msgbody) {
  if (msgbody != NULL) {
    set_has_msgbody();
  } else {
    clear_has_msgbody();
  }
  msgbody_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgbody);
  // @@protoc_insertion_point(field_set_allocated:msginfo.CMsg.msgbody)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgHead::kMsglenFieldNumber;
const int CMsgHead::kMsgtypeFieldNumber;
const int CMsgHead::kMsgseqFieldNumber;
const int CMsgHead::kTermversionFieldNumber;
const int CMsgHead::kMsgresFieldNumber;
const int CMsgHead::kTermidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgHead::CMsgHead()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_msginfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msginfo.CMsgHead)
}
CMsgHead::CMsgHead(const CMsgHead& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  termid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_termid()) {
    termid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.termid_);
  }
  ::memcpy(&msglen_, &from.msglen_,
    reinterpret_cast<char*>(&msgres_) -
    reinterpret_cast<char*>(&msglen_) + sizeof(msgres_));
  // @@protoc_insertion_point(copy_constructor:msginfo.CMsgHead)
}

void CMsgHead::SharedCtor() {
  _cached_size_ = 0;
  termid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msglen_, 0, reinterpret_cast<char*>(&msgres_) -
    reinterpret_cast<char*>(&msglen_) + sizeof(msgres_));
}

CMsgHead::~CMsgHead() {
  // @@protoc_insertion_point(destructor:msginfo.CMsgHead)
  SharedDtor();
}

void CMsgHead::SharedDtor() {
  termid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgHead::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgHead::descriptor() {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[1].descriptor;
}

const CMsgHead& CMsgHead::default_instance() {
  protobuf_msginfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgHead* CMsgHead::New(::google::protobuf::Arena* arena) const {
  CMsgHead* n = new CMsgHead;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgHead::Clear() {
// @@protoc_insertion_point(message_clear_start:msginfo.CMsgHead)
  if (has_termid()) {
    GOOGLE_DCHECK(!termid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*termid_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&msglen_, 0, reinterpret_cast<char*>(&msgres_) -
      reinterpret_cast<char*>(&msglen_) + sizeof(msgres_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgHead::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msginfo.CMsgHead)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 msglen = 1;
      case 1: {
        if (tag == 8u) {
          set_has_msglen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msglen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 msgtype = 2;
      case 2: {
        if (tag == 16u) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 msgseq = 3;
      case 3: {
        if (tag == 24u) {
          set_has_msgseq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgseq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 termversion = 4;
      case 4: {
        if (tag == 32u) {
          set_has_termversion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &termversion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 msgres = 5;
      case 5: {
        if (tag == 40u) {
          set_has_msgres();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgres_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string termid = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_termid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->termid().data(), this->termid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msginfo.CMsgHead.termid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msginfo.CMsgHead)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msginfo.CMsgHead)
  return false;
#undef DO_
}

void CMsgHead::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msginfo.CMsgHead)
  // required int32 msglen = 1;
  if (has_msglen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->msglen(), output);
  }

  // required int32 msgtype = 2;
  if (has_msgtype()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->msgtype(), output);
  }

  // required int32 msgseq = 3;
  if (has_msgseq()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->msgseq(), output);
  }

  // required int32 termversion = 4;
  if (has_termversion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->termversion(), output);
  }

  // required int32 msgres = 5;
  if (has_msgres()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->msgres(), output);
  }

  // required string termid = 6;
  if (has_termid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->termid().data(), this->termid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msginfo.CMsgHead.termid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->termid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msginfo.CMsgHead)
}

::google::protobuf::uint8* CMsgHead::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msginfo.CMsgHead)
  // required int32 msglen = 1;
  if (has_msglen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->msglen(), target);
  }

  // required int32 msgtype = 2;
  if (has_msgtype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->msgtype(), target);
  }

  // required int32 msgseq = 3;
  if (has_msgseq()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->msgseq(), target);
  }

  // required int32 termversion = 4;
  if (has_termversion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->termversion(), target);
  }

  // required int32 msgres = 5;
  if (has_msgres()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->msgres(), target);
  }

  // required string termid = 6;
  if (has_termid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->termid().data(), this->termid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msginfo.CMsgHead.termid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->termid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msginfo.CMsgHead)
  return target;
}

size_t CMsgHead::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:msginfo.CMsgHead)
  size_t total_size = 0;

  if (has_termid()) {
    // required string termid = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->termid());
  }

  if (has_msglen()) {
    // required int32 msglen = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msglen());
  }

  if (has_msgtype()) {
    // required int32 msgtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());
  }

  if (has_msgseq()) {
    // required int32 msgseq = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgseq());
  }

  if (has_termversion()) {
    // required int32 termversion = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->termversion());
  }

  if (has_msgres()) {
    // required int32 msgres = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgres());
  }

  return total_size;
}
size_t CMsgHead::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msginfo.CMsgHead)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string termid = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->termid());

    // required int32 msglen = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msglen());

    // required int32 msgtype = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgtype());

    // required int32 msgseq = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgseq());

    // required int32 termversion = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->termversion());

    // required int32 msgres = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msgres());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgHead::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msginfo.CMsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgHead* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgHead>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msginfo.CMsgHead)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msginfo.CMsgHead)
    MergeFrom(*source);
  }
}

void CMsgHead::MergeFrom(const CMsgHead& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msginfo.CMsgHead)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_termid()) {
      set_has_termid();
      termid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.termid_);
    }
    if (from.has_msglen()) {
      set_msglen(from.msglen());
    }
    if (from.has_msgtype()) {
      set_msgtype(from.msgtype());
    }
    if (from.has_msgseq()) {
      set_msgseq(from.msgseq());
    }
    if (from.has_termversion()) {
      set_termversion(from.termversion());
    }
    if (from.has_msgres()) {
      set_msgres(from.msgres());
    }
  }
}

void CMsgHead::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msginfo.CMsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgHead::CopyFrom(const CMsgHead& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msginfo.CMsgHead)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgHead::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void CMsgHead::Swap(CMsgHead* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgHead::InternalSwap(CMsgHead* other) {
  termid_.Swap(&other->termid_);
  std::swap(msglen_, other->msglen_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(msgseq_, other->msgseq_);
  std::swap(termversion_, other->termversion_);
  std::swap(msgres_, other->msgres_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgHead::GetMetadata() const {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgHead

// required int32 msglen = 1;
bool CMsgHead::has_msglen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgHead::set_has_msglen() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgHead::clear_has_msglen() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgHead::clear_msglen() {
  msglen_ = 0;
  clear_has_msglen();
}
::google::protobuf::int32 CMsgHead::msglen() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgHead.msglen)
  return msglen_;
}
void CMsgHead::set_msglen(::google::protobuf::int32 value) {
  set_has_msglen();
  msglen_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgHead.msglen)
}

// required int32 msgtype = 2;
bool CMsgHead::has_msgtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgHead::set_has_msgtype() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgHead::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgHead::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::google::protobuf::int32 CMsgHead::msgtype() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgHead.msgtype)
  return msgtype_;
}
void CMsgHead::set_msgtype(::google::protobuf::int32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgHead.msgtype)
}

// required int32 msgseq = 3;
bool CMsgHead::has_msgseq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgHead::set_has_msgseq() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgHead::clear_has_msgseq() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgHead::clear_msgseq() {
  msgseq_ = 0;
  clear_has_msgseq();
}
::google::protobuf::int32 CMsgHead::msgseq() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgHead.msgseq)
  return msgseq_;
}
void CMsgHead::set_msgseq(::google::protobuf::int32 value) {
  set_has_msgseq();
  msgseq_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgHead.msgseq)
}

// required int32 termversion = 4;
bool CMsgHead::has_termversion() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgHead::set_has_termversion() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgHead::clear_has_termversion() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgHead::clear_termversion() {
  termversion_ = 0;
  clear_has_termversion();
}
::google::protobuf::int32 CMsgHead::termversion() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgHead.termversion)
  return termversion_;
}
void CMsgHead::set_termversion(::google::protobuf::int32 value) {
  set_has_termversion();
  termversion_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgHead.termversion)
}

// required int32 msgres = 5;
bool CMsgHead::has_msgres() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgHead::set_has_msgres() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgHead::clear_has_msgres() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgHead::clear_msgres() {
  msgres_ = 0;
  clear_has_msgres();
}
::google::protobuf::int32 CMsgHead::msgres() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgHead.msgres)
  return msgres_;
}
void CMsgHead::set_msgres(::google::protobuf::int32 value) {
  set_has_msgres();
  msgres_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgHead.msgres)
}

// required string termid = 6;
bool CMsgHead::has_termid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgHead::set_has_termid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgHead::clear_has_termid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgHead::clear_termid() {
  termid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_termid();
}
const ::std::string& CMsgHead::termid() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgHead.termid)
  return termid_.GetNoArena();
}
void CMsgHead::set_termid(const ::std::string& value) {
  set_has_termid();
  termid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:msginfo.CMsgHead.termid)
}
#if LANG_CXX11
void CMsgHead::set_termid(::std::string&& value) {
  set_has_termid();
  termid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msginfo.CMsgHead.termid)
}
#endif
void CMsgHead::set_termid(const char* value) {
  set_has_termid();
  termid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msginfo.CMsgHead.termid)
}
void CMsgHead::set_termid(const char* value, size_t size) {
  set_has_termid();
  termid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msginfo.CMsgHead.termid)
}
::std::string* CMsgHead::mutable_termid() {
  set_has_termid();
  // @@protoc_insertion_point(field_mutable:msginfo.CMsgHead.termid)
  return termid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgHead::release_termid() {
  // @@protoc_insertion_point(field_release:msginfo.CMsgHead.termid)
  clear_has_termid();
  return termid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgHead::set_allocated_termid(::std::string* termid) {
  if (termid != NULL) {
    set_has_termid();
  } else {
    clear_has_termid();
  }
  termid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), termid);
  // @@protoc_insertion_point(field_set_allocated:msginfo.CMsgHead.termid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

::google::protobuf::internal::ExplicitlyConstructed< ::std::string> CMsgReg::_default_termid_;
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgReg::kAreaFieldNumber;
const int CMsgReg::kRegionFieldNumber;
const int CMsgReg::kShopFieldNumber;
const int CMsgReg::kRetFieldNumber;
const int CMsgReg::kTermidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgReg::CMsgReg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_msginfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msginfo.CMsgReg)
}
CMsgReg::CMsgReg(const CMsgReg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  termid_.UnsafeSetDefault(&CMsgReg::_default_termid_.get());
  if (from.has_termid()) {
    termid_.AssignWithDefault(&CMsgReg::_default_termid_.get(), from.termid_);
  }
  ::memcpy(&area_, &from.area_,
    reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&area_) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:msginfo.CMsgReg)
}

void CMsgReg::SharedCtor() {
  _cached_size_ = 0;
  termid_.UnsafeSetDefault(&CMsgReg::_default_termid_.get());
  ::memset(&area_, 0, reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&area_) + sizeof(ret_));
}

CMsgReg::~CMsgReg() {
  // @@protoc_insertion_point(destructor:msginfo.CMsgReg)
  SharedDtor();
}

void CMsgReg::SharedDtor() {
  termid_.DestroyNoArena(&CMsgReg::_default_termid_.get());
}

void CMsgReg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgReg::descriptor() {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[2].descriptor;
}

const CMsgReg& CMsgReg::default_instance() {
  protobuf_msginfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgReg* CMsgReg::New(::google::protobuf::Arena* arena) const {
  CMsgReg* n = new CMsgReg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgReg::Clear() {
// @@protoc_insertion_point(message_clear_start:msginfo.CMsgReg)
  if (has_termid()) {
    GOOGLE_DCHECK(!termid_.IsDefault(&CMsgReg::_default_termid_.get()));
    (*termid_.UnsafeRawStringPointer())->assign(*&CMsgReg::_default_termid_.get());
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&area_, 0, reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&area_) + sizeof(ret_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgReg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msginfo.CMsgReg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 area = 1;
      case 1: {
        if (tag == 8u) {
          set_has_area();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &area_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 region = 2;
      case 2: {
        if (tag == 16u) {
          set_has_region();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &region_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 shop = 3;
      case 3: {
        if (tag == 24u) {
          set_has_shop();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &shop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ret = 4;
      case 4: {
        if (tag == 32u) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string termid = 5 [default = "12345"];
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_termid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->termid().data(), this->termid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "msginfo.CMsgReg.termid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msginfo.CMsgReg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msginfo.CMsgReg)
  return false;
#undef DO_
}

void CMsgReg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msginfo.CMsgReg)
  // optional int32 area = 1;
  if (has_area()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->area(), output);
  }

  // optional int32 region = 2;
  if (has_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->region(), output);
  }

  // optional int32 shop = 3;
  if (has_shop()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->shop(), output);
  }

  // optional int32 ret = 4;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ret(), output);
  }

  // optional string termid = 5 [default = "12345"];
  if (has_termid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->termid().data(), this->termid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msginfo.CMsgReg.termid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->termid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msginfo.CMsgReg)
}

::google::protobuf::uint8* CMsgReg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msginfo.CMsgReg)
  // optional int32 area = 1;
  if (has_area()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->area(), target);
  }

  // optional int32 region = 2;
  if (has_region()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->region(), target);
  }

  // optional int32 shop = 3;
  if (has_shop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->shop(), target);
  }

  // optional int32 ret = 4;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ret(), target);
  }

  // optional string termid = 5 [default = "12345"];
  if (has_termid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->termid().data(), this->termid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "msginfo.CMsgReg.termid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->termid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msginfo.CMsgReg)
  return target;
}

size_t CMsgReg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msginfo.CMsgReg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string termid = 5 [default = "12345"];
    if (has_termid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->termid());
    }

    // optional int32 area = 1;
    if (has_area()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->area());
    }

    // optional int32 region = 2;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->region());
    }

    // optional int32 shop = 3;
    if (has_shop()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->shop());
    }

    // optional int32 ret = 4;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ret());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgReg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msginfo.CMsgReg)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgReg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgReg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msginfo.CMsgReg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msginfo.CMsgReg)
    MergeFrom(*source);
  }
}

void CMsgReg::MergeFrom(const CMsgReg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msginfo.CMsgReg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_termid()) {
      set_has_termid();
      termid_.AssignWithDefault(&CMsgReg::_default_termid_.get(), from.termid_);
    }
    if (from.has_area()) {
      set_area(from.area());
    }
    if (from.has_region()) {
      set_region(from.region());
    }
    if (from.has_shop()) {
      set_shop(from.shop());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
}

void CMsgReg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msginfo.CMsgReg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgReg::CopyFrom(const CMsgReg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msginfo.CMsgReg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgReg::IsInitialized() const {
  return true;
}

void CMsgReg::Swap(CMsgReg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgReg::InternalSwap(CMsgReg* other) {
  termid_.Swap(&other->termid_);
  std::swap(area_, other->area_);
  std::swap(region_, other->region_);
  std::swap(shop_, other->shop_);
  std::swap(ret_, other->ret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgReg::GetMetadata() const {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgReg

// optional int32 area = 1;
bool CMsgReg::has_area() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgReg::set_has_area() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgReg::clear_has_area() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgReg::clear_area() {
  area_ = 0;
  clear_has_area();
}
::google::protobuf::int32 CMsgReg::area() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgReg.area)
  return area_;
}
void CMsgReg::set_area(::google::protobuf::int32 value) {
  set_has_area();
  area_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgReg.area)
}

// optional int32 region = 2;
bool CMsgReg::has_region() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgReg::set_has_region() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgReg::clear_has_region() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgReg::clear_region() {
  region_ = 0;
  clear_has_region();
}
::google::protobuf::int32 CMsgReg::region() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgReg.region)
  return region_;
}
void CMsgReg::set_region(::google::protobuf::int32 value) {
  set_has_region();
  region_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgReg.region)
}

// optional int32 shop = 3;
bool CMsgReg::has_shop() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgReg::set_has_shop() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgReg::clear_has_shop() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgReg::clear_shop() {
  shop_ = 0;
  clear_has_shop();
}
::google::protobuf::int32 CMsgReg::shop() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgReg.shop)
  return shop_;
}
void CMsgReg::set_shop(::google::protobuf::int32 value) {
  set_has_shop();
  shop_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgReg.shop)
}

// optional int32 ret = 4;
bool CMsgReg::has_ret() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgReg::set_has_ret() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgReg::clear_has_ret() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgReg::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
::google::protobuf::int32 CMsgReg::ret() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgReg.ret)
  return ret_;
}
void CMsgReg::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgReg.ret)
}

// optional string termid = 5 [default = "12345"];
bool CMsgReg::has_termid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgReg::set_has_termid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgReg::clear_has_termid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgReg::clear_termid() {
  termid_.ClearToDefaultNoArena(&CMsgReg::_default_termid_.get());
  clear_has_termid();
}
const ::std::string& CMsgReg::termid() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgReg.termid)
  return termid_.GetNoArena();
}
void CMsgReg::set_termid(const ::std::string& value) {
  set_has_termid();
  termid_.SetNoArena(&CMsgReg::_default_termid_.get(), value);
  // @@protoc_insertion_point(field_set:msginfo.CMsgReg.termid)
}
#if LANG_CXX11
void CMsgReg::set_termid(::std::string&& value) {
  set_has_termid();
  termid_.SetNoArena(
    &CMsgReg::_default_termid_.get(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:msginfo.CMsgReg.termid)
}
#endif
void CMsgReg::set_termid(const char* value) {
  set_has_termid();
  termid_.SetNoArena(&CMsgReg::_default_termid_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:msginfo.CMsgReg.termid)
}
void CMsgReg::set_termid(const char* value, size_t size) {
  set_has_termid();
  termid_.SetNoArena(&CMsgReg::_default_termid_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:msginfo.CMsgReg.termid)
}
::std::string* CMsgReg::mutable_termid() {
  set_has_termid();
  // @@protoc_insertion_point(field_mutable:msginfo.CMsgReg.termid)
  return termid_.MutableNoArena(&CMsgReg::_default_termid_.get());
}
::std::string* CMsgReg::release_termid() {
  // @@protoc_insertion_point(field_release:msginfo.CMsgReg.termid)
  clear_has_termid();
  return termid_.ReleaseNoArena(&CMsgReg::_default_termid_.get());
}
void CMsgReg::set_allocated_termid(::std::string* termid) {
  if (termid != NULL) {
    set_has_termid();
  } else {
    clear_has_termid();
  }
  termid_.SetAllocatedNoArena(&CMsgReg::_default_termid_.get(), termid);
  // @@protoc_insertion_point(field_set_allocated:msginfo.CMsgReg.termid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLogin::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLogin::CMsgLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_msginfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msginfo.CMsgLogin)
}
CMsgLogin::CMsgLogin(const CMsgLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:msginfo.CMsgLogin)
}

void CMsgLogin::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
}

CMsgLogin::~CMsgLogin() {
  // @@protoc_insertion_point(destructor:msginfo.CMsgLogin)
  SharedDtor();
}

void CMsgLogin::SharedDtor() {
}

void CMsgLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLogin::descriptor() {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[3].descriptor;
}

const CMsgLogin& CMsgLogin::default_instance() {
  protobuf_msginfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgLogin* CMsgLogin::New(::google::protobuf::Arena* arena) const {
  CMsgLogin* n = new CMsgLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:msginfo.CMsgLogin)
  ret_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msginfo.CMsgLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (tag == 8u) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msginfo.CMsgLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msginfo.CMsgLogin)
  return false;
#undef DO_
}

void CMsgLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msginfo.CMsgLogin)
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msginfo.CMsgLogin)
}

::google::protobuf::uint8* CMsgLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msginfo.CMsgLogin)
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msginfo.CMsgLogin)
  return target;
}

size_t CMsgLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msginfo.CMsgLogin)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msginfo.CMsgLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msginfo.CMsgLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msginfo.CMsgLogin)
    MergeFrom(*source);
  }
}

void CMsgLogin::MergeFrom(const CMsgLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msginfo.CMsgLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ret()) {
    set_ret(from.ret());
  }
}

void CMsgLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msginfo.CMsgLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLogin::CopyFrom(const CMsgLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msginfo.CMsgLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLogin::IsInitialized() const {
  return true;
}

void CMsgLogin::Swap(CMsgLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLogin::InternalSwap(CMsgLogin* other) {
  std::swap(ret_, other->ret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgLogin::GetMetadata() const {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgLogin

// optional int32 ret = 1;
bool CMsgLogin::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgLogin::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgLogin::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgLogin::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
::google::protobuf::int32 CMsgLogin::ret() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgLogin.ret)
  return ret_;
}
void CMsgLogin::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgLogin.ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLogout::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLogout::CMsgLogout()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_msginfo_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:msginfo.CMsgLogout)
}
CMsgLogout::CMsgLogout(const CMsgLogout& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:msginfo.CMsgLogout)
}

void CMsgLogout::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0;
}

CMsgLogout::~CMsgLogout() {
  // @@protoc_insertion_point(destructor:msginfo.CMsgLogout)
  SharedDtor();
}

void CMsgLogout::SharedDtor() {
}

void CMsgLogout::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLogout::descriptor() {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[4].descriptor;
}

const CMsgLogout& CMsgLogout::default_instance() {
  protobuf_msginfo_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgLogout* CMsgLogout::New(::google::protobuf::Arena* arena) const {
  CMsgLogout* n = new CMsgLogout;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgLogout::Clear() {
// @@protoc_insertion_point(message_clear_start:msginfo.CMsgLogout)
  ret_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLogout::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msginfo.CMsgLogout)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 ret = 1;
      case 1: {
        if (tag == 8u) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msginfo.CMsgLogout)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msginfo.CMsgLogout)
  return false;
#undef DO_
}

void CMsgLogout::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msginfo.CMsgLogout)
  // optional int32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msginfo.CMsgLogout)
}

::google::protobuf::uint8* CMsgLogout::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:msginfo.CMsgLogout)
  // optional int32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msginfo.CMsgLogout)
  return target;
}

size_t CMsgLogout::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msginfo.CMsgLogout)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLogout::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msginfo.CMsgLogout)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLogout* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLogout>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msginfo.CMsgLogout)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msginfo.CMsgLogout)
    MergeFrom(*source);
  }
}

void CMsgLogout::MergeFrom(const CMsgLogout& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msginfo.CMsgLogout)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ret()) {
    set_ret(from.ret());
  }
}

void CMsgLogout::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msginfo.CMsgLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLogout::CopyFrom(const CMsgLogout& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msginfo.CMsgLogout)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLogout::IsInitialized() const {
  return true;
}

void CMsgLogout::Swap(CMsgLogout* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLogout::InternalSwap(CMsgLogout* other) {
  std::swap(ret_, other->ret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgLogout::GetMetadata() const {
  protobuf_msginfo_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_msginfo_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgLogout

// optional int32 ret = 1;
bool CMsgLogout::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgLogout::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgLogout::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgLogout::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
::google::protobuf::int32 CMsgLogout::ret() const {
  // @@protoc_insertion_point(field_get:msginfo.CMsgLogout.ret)
  return ret_;
}
void CMsgLogout::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:msginfo.CMsgLogout.ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msginfo

// @@protoc_insertion_point(global_scope)
